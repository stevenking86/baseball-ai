{"ast":null,"code":"var _jsxFileName = \"/Users/stevengerhardt-king/Code/baseball/my-react-app/src/components/HowFar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FurthestHomeRun = () => {\n  _s();\n  const [hrInfo, setHrInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const getYesterdayDate = () => {\n    const d = new Date(Date.now() - 86400000);\n    return d.toISOString().split('T')[0]; // YYYY-MM-DD\n  };\n  useEffect(() => {\n    const fetchHRData = async () => {\n      const date = getYesterdayDate();\n      const url = `https://api-baseball.p.rapidapi.com/statistics?league=1&season=2025&date=${date}`;\n      const options = {\n        method: 'GET',\n        headers: {\n          'X-RapidAPI-Key': 'd72f9d4be4mshd0c36f73633aad8p1b6148jsn9ee5ea8a9711',\n          'X-RapidAPI-Host': 'api-baseball.p.rapidapi.com'\n        }\n      };\n      try {\n        const res = await fetch(url, options);\n        const data = await res.json();\n        let maxHR = {\n          distance: 0,\n          batter: null,\n          game: null\n        };\n        data.response.forEach(stat => {\n          var _stat$hits;\n          (_stat$hits = stat.hits) === null || _stat$hits === void 0 ? void 0 : _stat$hits.forEach(hit => {\n            if (hit.type === 'Home Run' && hit.distance && hit.distance > maxHR.distance) {\n              var _stat$player, _stat$game;\n              maxHR = {\n                distance: hit.distance,\n                batter: (_stat$player = stat.player) === null || _stat$player === void 0 ? void 0 : _stat$player.name,\n                game: (_stat$game = stat.game) === null || _stat$game === void 0 ? void 0 : _stat$game.id\n              };\n            }\n          });\n        });\n        setHrInfo(maxHR.distance > 0 ? maxHR : null);\n      } catch (err) {\n        console.error(err);\n        console.log(err);\n        setError('Failed to fetch home run data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHRData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  if (!hrInfo) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No home runs found yesterday.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md p-4 rounded-xl shadow-md border\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"Furthest Home Run (Yesterday)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Player:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this), \" \", hrInfo.batter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Distance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }, this), \" \", hrInfo.distance, \" ft\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Game ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), \" \", hrInfo.game]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(FurthestHomeRun, \"Z4QEFL9RF7nOOXTup+5Dz1rvcU8=\");\n_c = FurthestHomeRun;\nexport default FurthestHomeRun;\nvar _c;\n$RefreshReg$(_c, \"FurthestHomeRun\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FurthestHomeRun","_s","hrInfo","setHrInfo","loading","setLoading","error","setError","getYesterdayDate","d","Date","now","toISOString","split","fetchHRData","date","url","options","method","headers","res","fetch","data","json","maxHR","distance","batter","game","response","forEach","stat","_stat$hits","hits","hit","type","_stat$player","_stat$game","player","name","id","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/stevengerhardt-king/Code/baseball/my-react-app/src/components/HowFar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ntype HrInfo = {\n  distance: number;\n  batter: string | null;\n  game: string | number | null;\n} | null;\n\nconst FurthestHomeRun = () => {\n  const [hrInfo, setHrInfo] = useState<HrInfo>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const getYesterdayDate = () => {\n    const d = new Date(Date.now() - 86400000);\n    return d.toISOString().split('T')[0]; // YYYY-MM-DD\n  };\n\n  useEffect(() => {\n    const fetchHRData = async () => {\n      const date = getYesterdayDate();\n      const url = `https://api-baseball.p.rapidapi.com/statistics?league=1&season=2025&date=${date}`;\n      \n      const options = {\n        method: 'GET',\n        headers: {\n          'X-RapidAPI-Key': 'd72f9d4be4mshd0c36f73633aad8p1b6148jsn9ee5ea8a9711',\n          'X-RapidAPI-Host': 'api-baseball.p.rapidapi.com'\n        }\n      };\n\n      try {\n        const res = await fetch(url, options);\n        const data = await res.json();\n\n        let maxHR = { distance: 0, batter: null, game: null };\n\n        data.response.forEach((stat: { hits: { type: string; distance: number; }[]; player: { name: any; }; game: { id: any; }; }) => {\n          stat.hits?.forEach((hit: { type: string; distance: number; }) => {\n            if (hit.type === 'Home Run' && hit.distance && hit.distance > maxHR.distance) {\n              maxHR = {\n                distance: hit.distance,\n                batter: stat.player?.name,\n                game: stat.game?.id\n              };\n            }\n          });\n        });\n\n        setHrInfo(maxHR.distance > 0 ? maxHR : null);\n      } catch (err) {\n        console.error(err);\n        console.log(err);\n        setError('Failed to fetch home run data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchHRData();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n  if (!hrInfo) return <p>No home runs found yesterday.</p>;\n\n  return (\n    <div className=\"max-w-md p-4 rounded-xl shadow-md border\">\n      <h2 className=\"text-xl font-semibold mb-2\">Furthest Home Run (Yesterday)</h2>\n      <p><strong>Player:</strong> {hrInfo.batter}</p>\n      <p><strong>Distance:</strong> {hrInfo.distance} ft</p>\n      <p><strong>Game ID:</strong> {hrInfo.game}</p>\n    </div>\n  );\n};\n\nexport default FurthestHomeRun;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAS,IAAI,CAAC;EAClD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzC,OAAOF,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,IAAI,GAAGP,gBAAgB,CAAC,CAAC;MAC/B,MAAMQ,GAAG,GAAG,4EAA4ED,IAAI,EAAE;MAE9F,MAAME,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EAAE,oDAAoD;UACtE,iBAAiB,EAAE;QACrB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;QACrC,MAAMK,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAE7B,IAAIC,KAAK,GAAG;UAAEC,QAAQ,EAAE,CAAC;UAAEC,MAAM,EAAE,IAAI;UAAEC,IAAI,EAAE;QAAK,CAAC;QAErDL,IAAI,CAACM,QAAQ,CAACC,OAAO,CAAEC,IAAkG,IAAK;UAAA,IAAAC,UAAA;UAC5H,CAAAA,UAAA,GAAAD,IAAI,CAACE,IAAI,cAAAD,UAAA,uBAATA,UAAA,CAAWF,OAAO,CAAEI,GAAwC,IAAK;YAC/D,IAAIA,GAAG,CAACC,IAAI,KAAK,UAAU,IAAID,GAAG,CAACR,QAAQ,IAAIQ,GAAG,CAACR,QAAQ,GAAGD,KAAK,CAACC,QAAQ,EAAE;cAAA,IAAAU,YAAA,EAAAC,UAAA;cAC5EZ,KAAK,GAAG;gBACNC,QAAQ,EAAEQ,GAAG,CAACR,QAAQ;gBACtBC,MAAM,GAAAS,YAAA,GAAEL,IAAI,CAACO,MAAM,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,IAAI;gBACzBX,IAAI,GAAAS,UAAA,GAAEN,IAAI,CAACH,IAAI,cAAAS,UAAA,uBAATA,UAAA,CAAWG;cACnB,CAAC;YACH;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFpC,SAAS,CAACqB,KAAK,CAACC,QAAQ,GAAG,CAAC,GAAGD,KAAK,GAAG,IAAI,CAAC;MAC9C,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACZC,OAAO,CAACnC,KAAK,CAACkC,GAAG,CAAC;QAClBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBjC,QAAQ,CAAC,gCAAgC,CAAC;MAC5C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIV,OAAO,EAAE,oBAAOL,OAAA;IAAA4C,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIzC,KAAK,EAAE,oBAAOP,OAAA;IAAA4C,QAAA,EAAIrC;EAAK;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,IAAI,CAAC7C,MAAM,EAAE,oBAAOH,OAAA;IAAA4C,QAAA,EAAG;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAExD,oBACEhD,OAAA;IAAKiD,SAAS,EAAC,0CAA0C;IAAAL,QAAA,gBACvD5C,OAAA;MAAIiD,SAAS,EAAC,4BAA4B;MAAAL,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7EhD,OAAA;MAAA4C,QAAA,gBAAG5C,OAAA;QAAA4C,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC7C,MAAM,CAACwB,MAAM;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/ChD,OAAA;MAAA4C,QAAA,gBAAG5C,OAAA;QAAA4C,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC7C,MAAM,CAACuB,QAAQ,EAAC,KAAG;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtDhD,OAAA;MAAA4C,QAAA,gBAAG5C,OAAA;QAAA4C,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC7C,MAAM,CAACyB,IAAI;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC9C,EAAA,CAlEID,eAAe;AAAAiD,EAAA,GAAfjD,eAAe;AAoErB,eAAeA,eAAe;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}